version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-playground}
      POSTGRES_USER: ${POSTGRES_USER:-deuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-depassword}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - init_scripts:/docker-entrypoint-initdb.d
    networks:
      - de-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-deuser} -d ${POSTGRES_DB:-playground}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@de-playground.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-8082}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - workspace_data:/srv/workspace
      - init_scripts:/srv/init-scripts
    networks:
      - de-network
    depends_on:
      - postgres
      - volume-permissions
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Volume permission initialization
  volume-permissions:
    image: alpine:latest
    command: >
      sh -c "
        echo 'Setting up volume permissions...' &&
        chmod -R 777 /srv/workspace &&
        chmod -R 755 /srv/init-scripts &&
        chown -R 1000:1000 /srv/workspace /srv/init-scripts &&
        echo 'Volume permissions set successfully!'
      "
    volumes:
      - workspace_data:/srv/workspace
      - init_scripts:/srv/init-scripts
    restart: "no"

  # File manager for easy file access (optional)
  filebrowser:
    image: filebrowser/filebrowser:latest
    user: "1000:1000"  # Use consistent user ID
    umask: "000"  # Set umask to allow full permissions
    environment:
      - FB_DATABASE=/database/filebrowser.db
      - FB_ROOT=/srv
      - FB_NOAUTH=${FILEBROWSER_NOAUTH:-true}
    ports:
      - "${FILEBROWSER_PORT:-8083}:80"
    volumes:
      - filebrowser_data:/database
      - workspace_data:/srv/workspace
      - init_scripts:/srv/init-scripts
    networks:
      - de-network
    depends_on:
      - volume-permissions
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  workspace_data:
    driver: local
  init_scripts:
    driver: local
  filebrowser_data:
    driver: local

networks:
  de-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET:-172.20.0.0/16}